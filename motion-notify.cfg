[SmtpEmailNotifyAction]
# GMail account credentials
name = Your Name
user = youremail@gmail.com
password = yourpassword
sender = youremail@gmail.com
# Recipient email address (could be same as from_addr)
recipient = youremail@provider.com
# Subject line for email
subject = Motion detected
# First line of email message
movie_end_message = Video uploaded
event_started_message = An event has been detected and is being captured. Images are being uploaded to Google Drive.
# The link to the Google Drive folder that will be included in the email at the start of the event. This is only used in the email - it doesn't affect the upload
image_and_video_folder_link = https://drive.google.com/a/xxxxxxxxxxx.com/folderview?id=xxxxxxxxxxxxxxxxx&usp=sharing

[GoogleDriveUploadAction]
# The folder in Google drive to upload to (from the URL eg. https://drive.google.com/drive/folders/0Bzt4FJyYHjdYhnA3cECdTFW3RWM
folder_name = MOTION
folder = 0Bzt4FJyYHjdYhnA3cECdTFW3RWM
#key file - this is the p12 key file downloaded from developers.google.com
key_file = /etc/motion-notify/creds.p12
service_user_email = xxxxxxxxxxxxxxxxxxxxxxxxxxx@developer.gserviceaccount.com
dateformat = %Y-%m-%d
#The email of the user who will own the file / folder in Google Drive
owner = owner@gmail.com
#Users who need write access to the daily folders in Google Drive (typically just the owner above)
write_users = youremail@gmail.com,writer@gmail.com
#Users who need read access to the daily folders in Google Drive (anyone with whom you want to share the folder - typically this is the SmtpEmailNotifyAction.recipient above)
read_users = reader@gmail.com
# Boolean to enable locking to syncronise uploads so only one is in progress at a time
# Useful when running with limited bandwidth
mutex-enabled = true
file_retention_days=80

[UrlInvokeAction]
event_start_url=http://localhost:8080/status/status-active
movie_end_url=http://localhost:8080/status/status-inactive

[TimeBasedDetector]
# Specify times during which the system is always active
time_ranges = 01:00-07:00,12:00-13:00

[ArpBasedDetector]
# Network to monitor (used by MAC address detection)
network = 192.168.1.0:255.255.255.0
# MAC addresses (comma separated) of the devices to detect home presence and disable emails (e.g., phones) - these will be ignored if you specify IP addresses below
presence_macs = XX:XX:XX:XX:XX,YY:YY:YY:YY:YY

[IpBasedDetector]
#Space separated list of IP addresses for detection. If these are present on the network the system is inactive. Setup a static IP on your router to keep your IP constant
#The MAC address above will be ignored if you configure an IP here 
ip_addresses = 127.0.0.1
#If no ping response is received from each specified IP within this number of seconds the ping command will exit and assume the device is not online
ping_timeout_seconds = 2
#The switch for timeout arguments aren't consistent between different OS's. BSD based is -t, Debian based is -w
ping_timeout_switch = -w

[Detection]
#List the detectors to be used in order. Group detectors together if you want them all to be checked in order for the system to be considered active.
#eg1. {TimeBasedDetctor,IPBasedDetector},{ArpBasedDetctor} - system is active if both the TimeBasedDetector and IPBasedDetector are active or the ArpBasedDetector is active
#eg2. {TimeBasedDetector},{IpBasedDetector} - system is active if either the TimeBasedDetector or IpBasedDetector are active. IpBasedDetector will only be called if TimeBasedDetector is inactive
detector_rules = {TimeBasedDetector},{IpBasedDetector}

[EventActionRules]
#List the actions that should be carried out when an event occurs. Format is ActionClass:always or if_active. When using if_active actions will only be called if the detectors indicate that the system is active
on_event_start = SmtpEmailNotifyAction:if_active,UrlInvokeAction:always
on_picture_save = GoogleDriveUploadAction:always,DeleteMediaFileAction:always
on_movie_end = GoogleDriveUploadAction:always,SmtpEmailNotifyAction:if_active,DeleteMediaFileAction:always,UrlInvokeAction:always
on_cron_trigger = GoogleDriveCleanupAction:always